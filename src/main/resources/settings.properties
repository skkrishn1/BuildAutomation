###############################################################################
# This File contains the properties required for the build automation. 
# Please note:
# 1. This build automation tool is to be run locally. This is not intended to 
#    run remotely.
# 2. Target Machine OS is expected to be Linux/Unix. Windows based OS is not 
#    completely supported by this tool.
# 
# This tool will
# 1. Stop weblogic server
# 2. Download the Nexus artifacts and dump them in the weblogic server 
#    at location specified by property "target.weblogic.managed.server.names"
# 3. Backup and replace the portal-ext.properties
# 4. Start the weblogic server
###############################################################################

# Optional Parameter
# Enable debug mode
enable.debug.mode=true

# Mandatory Parameters 
# This property defines the bin directory of the Weblogic domain  
# where Liferay application is deployed.
# For instance, if Liferay is deployed on domain for which the  
# base location is /fs01/app/dt210/wlserver1036/domain 
# then the property should be set as below:
#   target.weblogic.domain.base.directory=/fs01/app/dt210/wlserver1036/domain
#	target.weblogic.domain.bin.directory=/fs01/app/dt210/wlserver1036/domain/bin
# 
# Note:
# Property "target.weblogic.domain.base.directory" is required 
# for portal-ext.properties replacement
#
# Defining target.weblogic.domain.bin.directory is optional. In case, this is 
# defined the value "target.weblogic.domain.bin.directory" will be used.
# If it is not defined, value 
# 		<target.weblogic.domain.base.directory>/bin 
# is used.
target.weblogic.domain.base.directory=
target.weblogic.domain.bin.directory=

# Mandatory Parameter
# Names of the managed servers which need to be stoped and started as
# part of this build automation tool.
# The usual command to start and stop would be 
# 	<target.weblogic.domain.bin.directory>/domCtrl startServer <target.weblogic.managed.server.names>
# and 
# 	<target.weblogic.domain.bin.directory>/domCtrl stopServer <target.weblogic.managed.server.names>
# For instance,
# If the command is 
# 	domCtrl stopServer dt210_apportal_online1 dt210_apportal_admin
# then, set
# target.weblogic.managed.server.names=dt210_apportal_online1 dt210_apportal_admin
# Note:
# While specifying multiple managed server names, these should be specified using 
# spaces, like ==> dt210_apportal_online1 dt210_apportal_admin
target.weblogic.managed.server.names=

# Mandatory Parameter
# Location on target machine, where the artifacts from NEXUS are to  
# be dumped to. Typically this is the application folder of the 
# domain. But, this may vary. 
target.build.artifacts.download.location=

# Mandatory Parameter
# Information of the release version against which the NEXUS artifacts are to 
# to be downloaded.
milestone.release.version=6.0

# Optional Parameters
# #############################################################################
# Overriding the default version of the artifacts to be downloaded.
#
# By default, the version for all the artifacts to be downloaded will be 
# same as that of the "milestone.release.version" specified. In case, 
# you have to override / change the version of the artifacts to be downloaded
# following properties are to be specified. 
# These are optional fields. USE THEM ONLY IF YOU NEED TO DOWNLOAD SOMETHING
# THAT HAS VERSION OTHER THAN MENTIONED IN "milestone.release.version".
# 
# Artifact can be either hook, portlet or theme
# Details are to be specified in parts of 2 properties as below:
# artifact.name and artifact.release.version.number
# 
# Template is as below:
# <artifact name>.artifact.name=
# <artifact name>.artifact.release.version.number=  
# The artifact would be downloaded with following URL:
# http://{nexus URL}
#				/{fragment for hook/theme/plugin}
#					/<artifact name>
#						/<artifact version specified>
#							/<artifact name>-<artifact version>.war
#
# For instance, if I need to download the artifact zapp-theme, with release version
# as 1.2; in NEXUS the URL would be
# 	http://.../com/ap/ui/ap-portal/portal-plugins/themes/zapp-theme/1.2/Zapp-theme-1.2.war
# then, the properties to set would be
#   zapp-theme.artifact.name=zapp-theme
#	zapp-theme.artifact.release.version.number=1.2
# 
# Note:
# Please look at the enum "com.ap.ui.portal.installation.data.NexusArtifacts" 
# to get the acceptable list of "<artifact name>"
# System would recognise only those <artifact names> which are defined 
# in the enum "com.ap.ui.portal.installation.data.NexusArtifacts"
# Also, the type of the artifact plugin (hook, theme, portlet) is defined in 
# the enum "com.ap.ui.portal.installation.data.NexusArtifacts"
# The fragment for hook/theme/plugin is defined in "nexus.properties". Currently,
# there is no way to override "nexus.properties"
zapp-theme.artifact.release.version.number=1.2
ap-audit.artifact.release.version.number=5.0
portal-ext-properties.artifact.release.version.number=5.0
